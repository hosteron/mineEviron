Dump nand flash
===============
1) dump without oob info
nanddump -f /tmp/boot.bin -s 0 -l 8388608 -n --bb=dumpbad /dev/mtd0

2) dump with oob info
nanddump -f /tmp/nand.boot -s 0 -l 8388608 -n -o --bb=dumpbad /dev/mtd0

Flash boot image to nand with oob info to /dev/mtd0
===================================================
a) In linux
ftpget -u chunfeng -p chunfeng 172.21.15.200 /tmp/nand_boot_with_ecc.bin /tmp/nand_boot_with_ecc.bin
flash_erase -N /dev/mtd0 0 64
nandwrite -m -n -N -o -r /dev/mtd0 /tmp/nand_boot_with_ecc.bin

b) In UBoot


Flash ubi image to nand /dev/mtd1
=================================
a) In linux
ubidetach -p /dev/mtd1
ftpget -u chunfeng -p chunfeng 172.21.15.200 /tmp/ubi.img /tmp/ubi.img
flash_erase /dev/mtd1 0 512
nandwrite -m /dev/mtd1 /tmp/ubi.img
ubiattach -O 2048 -p /dev/mtd1
mount -t ubifs /dev/ubi0_0 /tmp/root
mount -t ubifs /dev/ubi0_1 /tmp/data

b) In UBoot, use ubi command (!!Buggy in tek-dm365 platform)
env set ipaddr 172.21.15.201
env set serverip 172.21.15.200
env set ethaddr 6C:62:6D:F8:EE:03
env set mtdparts mtdparts=davinci_nand.0:8m(bootloader),64m(ubi)
env set mtdids nand0=davinci_nand.0
env set partition nand0,1
nand erase 0x00800000 0x04000000
ubi part ubi 2048
ubi create root 0x3200000
ubi create data 0x500000
tftp 0x80700000 rootfs.img
ubi write 0x80700000 root 0x782000
tftp 0x80700000 datafs.img
ubi write 0x80700000 data 0x1b2000

c) In UBoot, use nand write command
env set ipaddr 172.21.15.201
env set serverip 172.21.15.200
env set ethaddr 6C:62:6D:F8:EE:03
tftp 0x80700000 ubi.img
nand erase 0x00800000 0x04000000
nand write 0x80700000 0x00800000 0x9c0000

Boot linux from nand
====================




NAND BOOT command from uboot
============================
env set mtdparts mtdparts=davinci_nand.0:8m(bootloader),64m(ubi);env set mtdids nand0=davinci_nand.0;env set partition nand0,1;ubi part ubi 2048;ubifsmount root;if ubifsload 0x80600000 /boot/nand_boot.scr;then source 0x80600000;else if mmc rescan 0;then if ext2load mmc 0 0x80600000 /boot/sdmmc_boot.scr;then source 0x80600000; else ext2load mmc 0:1 0x80700000 /boot/uImage; bootm 80700000;fi; fi;fi;

ffmpeg tips
===========
ffmpeg -t 120 -f video4linux2 -s 352*288 -i /dev/video0 ~/test.yuv
ffmpeg -f rawvideo -r 2 -s 352*288 -pix_fmt yuyv422 -i ~/test.yuv -vcodec h263 ~/test.avi
ftpget -u chunfeng -p chunfeng 192.168.1.101 /tmp/test.yuv test.yuv

play raw video data with mplayer
================================
 -rawvideo <option1:option2:...>
              This option lets you play raw video files.  You have to use -demuxer rawvideo as well.

              Available options are:

                 fps=<value>
                      rate in frames per second (default: 25.0)
                 sqcif|qcif|cif|4cif|pal|ntsc
                      set standard image size
                 w=<value>
                      image width in pixels
                 h=<value>
                      image height in pixels
                 i420|yv12|yuy2|y8
                      set colorspace
                 format=<value>
                      colorspace (fourcc) in hex or string constant.  Use -rawvideo format=help for a list of possible strings.
                 size=<value>
                      frame size in Bytes

              EXAMPLE:
                 mplayer foreman.qcif -demuxer rawvideo -rawvideo qcif
                      Play the famous "foreman" sample video.
                 mplayer sample-720x576.yuv -demuxer rawvideo -rawvideo w=720:h=576
                      Play a raw YUV sample.
                 mplayer -demuxer rawvideo -rawvideo w=640:h=480:format=uyvy:fps=15

Mount NFS
=========
sudo rc.d restart rpcbind nfs-common nfs-server

/etc/rc.d/connman.sh stop
LOCAL_IF=eth0 LOCAL_ADDR=172.21.15.11 NFS_SVR_ADDR=172.21.15.101 HW_SEED=01 /etc/rc.d/debug.sh start
LOCAL_IF=wlan0 LOCAL_ADDR=192.168.1.136 NFS_SVR_ADDR=192.168.1.101 HW_SEED=01 /etc/rc.d/debug.sh start
LOCAL_IF=wlan0 LOCAL_ADDR=172.21.16.130 NFS_SVR_ADDR=172.21.16.103 HW_SEED=01 /etc/rc.d/debug.sh start

audio test
==========
amixer sset "HP DAC" 100%
amixer sset "PCM" 100%
amixer sset "PGA" 50%
amixer sset 'Left PGA Mixer Mic3L' on
amixer sset 'Left PGA Mixer Mic3R' on
amixer sset 'Right PGA Mixer Mic3L' on
amixer sset 'Right PGA Mixer Mic3R' on

arecord -D hw:0,0 -f S16_LE -r 96000 -c 2  /tmp/test.wav
aplay -D hw:0,0 -f S16_LE -r 96000 -c 2 /tmp/test.wav

amixer sset 'Left PGA Mixer Line2L' off
amixer sset 'Left PGA Mixer Mic3L' off
amixer sset 'Left PGA Mixer Mic3R' off



Update kernel uImage manually
=============================
mkdir -p /tmp/sdroot
sudo mount /dev/sdb1  /tmp/sdroot/
sudo cp install/linux-uImage /tmp/sdroot/boot/uImage
sudo sync
sudo umount /tmp/sdroot

/etc/rc.d/dbus.sh start
/etc/rc.d/connman.sh start
/etc/rc.d/netmon.sh start


smart
=====
ftpget -u service -p service 172.21.16.107 /tmp/smartctl /home/chunfeng/projects/embuild/medusa/install/root/usr/bin/medusa.0.0.1
ftpget -u chunfeng -p chunfeng 172.21.16.103 /tmp/smart.0.0.1 /home/chunfeng/tmp/smart.0.0.1
ftpget -u chunfeng -p chunfeng 172.21.16.103 /tmp/smartctl.0.0.1 /home/chunfeng/tmp/smartctl.0.0.1
ftpget -u service -p service 172.21.16.107 /tmp/plug_anbao_mmi.so /tmp/plug_anbao_mmi.so

tty
===
stty -F /dev/ttyS0 38400 cs8 -parenb -cstopb -echo crtscts
stty -F /dev/ttymxc0 38400 cs8 -parenb -cstopb -echo crtscts
stty -F /dev/ttyUSB0 38400 cs8 -parenb -cstopb -echo crtscts


factory test
============
TEST_SVR_ADDR=172.21.16.108 /data/app/factory/factory_test.sh

route add -net 224.0.0.0 netmask 240.0.0.0 dev eth0

curl
======
curl -d '{"todo":"test"}' -H 'content-type:application/json' "https://user.ecovacs.com:8000/user.do"
